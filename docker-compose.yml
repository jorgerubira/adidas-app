version: "3.5"

services:
  
  mysql:  
    image: mysql:5.7
    container_name: mysql
    environment:
        MYSQL_DATABASE: adidas
        MYSQL_USER: user
        MYSQL_PASSWORD: 1111
        MYSQL_ROOT_PASSWORD: 1111
    ports:
      - "3307:3306"
    volumes:
      - my-db:/var/lib/mysql
  zookeeper:
      image: wurstmeister/zookeeper
      container_name: zookeeper
      ports:
      - "2181:2181"
  kafka:
      image: wurstmeister/kafka
      container_name: kafka
      ports:
      - "9092:9092"
      environment:
          KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  
  server-config:
    image: adidas/server-config-img:latest
    container_name: server-config-app
    build:
      context: server-config
      dockerfile: Dockerfile
    environment:
      - spring.profiles.active=dev
    ports:
      - "8888:8888"  
    links:
      - kafka
    depends_on:
      - zookeeper
      - kafka

  adiclub-service:
    image: adidas/adiclub-service-img:latest
    container_name: adiclub-service-app
    build:
      context: adiclub-service
      dockerfile: Dockerfile
    environment:
      - spring.profiles.active=dev
    depends_on:
      - mysql  
      - zookeeper
      - kafka
      - server-config

  email-service:
    image: adidas/email-service-img:latest
    container_name: email-service-app
    build:
      context: email-service
      dockerfile: Dockerfile
    environment:
      - spring.profiles.active=dev
    depends_on:
      - mysql  
      - zookeeper
      - kafka
      - server-config

  priority-sale-service:
    image: adidas/priority-sale-service-img:latest
    container_name: priority-sale-service-app
    build:
      context: priority-sale-service
      dockerfile: Dockerfile
    environment:
      - spring.profiles.active=dev
    depends_on:
      - mysql  
      - zookeeper
      - kafka
      - server-config
      
  public-service:
    image: adidas/public-service-img:latest
    container_name: public-service-app
    build:
      context: public-service
      dockerfile: Dockerfile
    environment:
      - spring.profiles.active=dev
    depends_on:
      - mysql  
      - zookeeper
      - kafka
      - server-config

  admin-ui:
    image: adidas/admin-ui-img:latest
    container_name: admin-ui-app
    build:
      context: admin-ui
      dockerfile: Dockerfile
    ports:
      - "80:80"
    environment:
      - spring.profiles.active=dev
    depends_on:
      - mysql  
      - zookeeper
      - kafka
      - server-config

volumes:
  my-db: